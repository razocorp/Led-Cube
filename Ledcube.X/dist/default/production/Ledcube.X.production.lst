

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Apr 02 14:40:53 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.41
    21                           ; Generated 25/01/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F690 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011E                     	;# 
   122  011F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0092                     	;# 
   168  0093                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  011A                     	;# 
   193  011B                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001C                     	;# 
   228  001D                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  0087                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011B                     	;# 
   267  011E                     	;# 
   268  011F                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  000E                     	;# 
   287  000F                     	;# 
   288  0010                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  008F                     	;# 
   312  0090                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0094                     	;# 
   318  0095                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009E                     	;# 
   328  009F                     	;# 
   329  010C                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  010F                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0118                     	;# 
   337  0119                     	;# 
   338  011A                     	;# 
   339  011B                     	;# 
   340  011E                     	;# 
   341  011F                     	;# 
   342  018C                     	;# 
   343  018D                     	;# 
   344  019D                     	;# 
   345  019E                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  000E                     	;# 
   360  000F                     	;# 
   361  0010                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0014                     	;# 
   366  0015                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0095                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0115                     	;# 
   408  0116                     	;# 
   409  0118                     	;# 
   410  0119                     	;# 
   411  011A                     	;# 
   412  011B                     	;# 
   413  011E                     	;# 
   414  011F                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  019D                     	;# 
   418  019E                     	;# 
   419  000C                     _PIR1bits	set	12
   420  0010                     _T1CONbits	set	16
   421  000E                     _TMR1L	set	14
   422  000F                     _TMR1H	set	15
   423  000B                     _INTCONbits	set	11
   424  0010                     _T1CON	set	16
   425  0006                     _PORTBbits	set	6
   426  0007                     _PORTCbits	set	7
   427  008C                     _PIE1bits	set	140
   428  0086                     _TRISBbits	set	134
   429  0087                     _TRISCbits	set	135
   430  011F                     _ANSELH	set	287
   431  011E                     _ANSEL	set	286
   432                           
   433                           ; #config settings
   434  0000                     
   435                           	psect	cinit
   436  0013                     start_initialization:	
   437  0013                     __initialization:	
   438                           
   439                           ; Clear objects allocated to BANK0
   440  0013  1283               	bcf	3,5	;RP0=0, select bank0
   441  0014  1303               	bcf	3,6	;RP1=0, select bank0
   442  0015  01A0               	clrf	__pbssBANK0& (0+127)
   443  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   444  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   445  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   446  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   447  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   448  001B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   449  001C  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   450  001D  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   451  001E  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   452  001F  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   453  0020  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   454  0021  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   455  0022                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  0022                     __end_of__initialization:	
   459  0022  0183               	clrf	3
   460  0023  118A  2910         	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssBANK0
   463  0020                     __pbssBANK0:	
   464  0020                     _leds:	
   465  0020                     	ds	8
   466  0028                     animation_updown@l:	
   467  0028                     	ds	1
   468  0029                     _animation_state:	
   469  0029                     	ds	1
   470  002A                     isr@prescaler:	
   471  002A                     	ds	1
   472  002B                     _layer:	
   473  002B                     	ds	1
   474  002C                     _animation_flag:	
   475  002C                     	ds	1
   476                           
   477                           	psect	cstackCOMMON
   478  0070                     __pcstackCOMMON:	
   479  0070                     ?_gpio_init:	
   480  0070                     ?_timer_init:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_leds_init:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_update_animation:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_set_lights:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_animation_updown:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_isr:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_leds_get_layer:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 2 bytes @ 0x0
   503                           
   504                           
   505                           ; 2 bytes @ 0x0
   506  0070                     	ds	2
   507  0072                     ??_leds_get_layer:	
   508                           
   509                           ; 1 bytes @ 0x2
   510  0072                     	ds	1
   511  0073                     leds_get_layer@layer_nbr:	
   512                           
   513                           ; 1 bytes @ 0x3
   514  0073                     	ds	1
   515  0074                     ??_set_lights:	
   516                           
   517                           ; 1 bytes @ 0x4
   518  0074                     	ds	5
   519  0079                     ??_isr:	
   520                           
   521                           ; 1 bytes @ 0x9
   522  0079                     	ds	5
   523                           
   524                           	psect	cstackBANK0
   525  002D                     __pcstackBANK0:	
   526  002D                     set_lights@a:	
   527                           
   528                           ; 2 bytes @ 0x0
   529  002D                     	ds	2
   530  002F                     set_lights@lights:	
   531                           
   532                           ; 2 bytes @ 0x2
   533  002F                     	ds	2
   534  0031                     set_lights@j:	
   535                           
   536                           ; 1 bytes @ 0x4
   537  0031                     	ds	1
   538  0032                     set_lights@gate:	
   539                           
   540                           ; 1 bytes @ 0x5
   541  0032                     	ds	1
   542  0033                     ??_gpio_init:	
   543  0033                     ??_timer_init:	
   544                           ; 1 bytes @ 0x6
   545                           
   546  0033                     ??_leds_init:	
   547                           ; 1 bytes @ 0x6
   548                           
   549  0033                     ??_animation_updown:	
   550                           ; 1 bytes @ 0x6
   551                           
   552                           
   553                           ; 1 bytes @ 0x6
   554  0033                     	ds	1
   555  0034                     animation_updown@i:	
   556                           
   557                           ; 1 bytes @ 0x7
   558  0034                     	ds	1
   559  0035                     ??_update_animation:	
   560  0035                     ??_main:	
   561                           ; 1 bytes @ 0x8
   562                           
   563                           
   564                           	psect	maintext
   565  0110                     __pmaintext:	
   566                           ; 1 bytes @ 0x8
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 34 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  2   12[None  ] int 
   579 ;; Registers used:
   580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : B00/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   586 ;;      Params:         0       0       0       0
   587 ;;      Locals:         0       0       0       0
   588 ;;      Temps:          0       0       0       0
   589 ;;      Totals:         0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels required when called:    5
   592 ;; This function calls:
   593 ;;		_gpio_init
   594 ;;		_leds_init
   595 ;;		_timer_init
   596 ;;		_update_animation
   597 ;; This function is called by:
   598 ;;		Startup code after reset
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _main
   604  0110                     _main:	
   605                           
   606                           ;main.c: 35: gpio_init();
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   610  0110  118A  20F5  118A   	fcall	_gpio_init
   611                           
   612                           ;main.c: 36: timer_init();
   613  0113  118A  2136  118A   	fcall	_timer_init
   614                           
   615                           ;main.c: 37: leds_init();
   616  0116  118A  2123  118A   	fcall	_leds_init
   617  0119                     l810:	
   618                           ;main.c: 38: while(1){
   619                           
   620                           
   621                           ;main.c: 39: if(animation_flag){
   622  0119  1283               	bcf	3,5	;RP0=0, select bank0
   623  011A  1303               	bcf	3,6	;RP1=0, select bank0
   624  011B  082C               	movf	_animation_flag,w	;volatile
   625  011C  1903               	btfsc	3,2
   626  011D  2919               	goto	l810
   627                           
   628                           ;main.c: 40: animation_flag = 0;
   629  011E  01AC               	clrf	_animation_flag	;volatile
   630                           
   631                           ;main.c: 41: update_animation();
   632  011F  118A  2153  118A   	fcall	_update_animation
   633  0122  2919               	goto	l810
   634  0123                     __end_of_main:	
   635                           
   636                           	psect	text1
   637  0153                     __ptext1:	
   638 ;; *************** function _update_animation *****************
   639 ;; Defined at:
   640 ;;		line 67 in file "leds.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   654 ;;      Params:         0       0       0       0
   655 ;;      Locals:         0       0       0       0
   656 ;;      Temps:          0       0       0       0
   657 ;;      Totals:         0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_animation_updown
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _update_animation
   670  0153                     _update_animation:	
   671                           
   672                           ;leds.c: 68: switch (animation_state){
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _update_animation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   676  0153  2957               	goto	l778
   677  0154                     l774:	
   678                           ;leds.c: 69: case UPDOWN:
   679                           
   680                           
   681                           ;leds.c: 70: animation_updown();
   682  0154  118A  2094         	fcall	_animation_updown
   683                           
   684                           ;leds.c: 72: }
   685                           
   686                           ;leds.c: 71: break;
   687  0156  0008               	return
   688  0157                     l778:	
   689  0157  1283               	bcf	3,5	;RP0=0, select bank0
   690  0158  1303               	bcf	3,6	;RP1=0, select bank0
   691  0159  0829               	movf	_animation_state,w
   692                           
   693                           ; Switch size 1, requested type "space"
   694                           ; Number of cases is 1, Range of values is 0 to 0
   695                           ; switch strategies available:
   696                           ; Name         Instructions Cycles
   697                           ; simple_byte            4     3 (average)
   698                           ; direct_byte            9     7 (fixed)
   699                           ; jumptable            260     6 (fixed)
   700                           ;	Chosen strategy is simple_byte
   701  015A  3A00               	xorlw	0	; case 0
   702  015B  1903               	skipnz
   703  015C  2954               	goto	l774
   704  015D  295E               	goto	l91
   705  015E                     l91:	
   706  015E  0008               	return
   707  015F                     __end_of_update_animation:	
   708                           
   709                           	psect	text2
   710  0094                     __ptext2:	
   711 ;; *************** function _animation_updown *****************
   712 ;; Defined at:
   713 ;;		line 82 in file "leds.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  i               1    7[BANK0 ] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   727 ;;      Params:         0       0       0       0
   728 ;;      Locals:         0       1       0       0
   729 ;;      Temps:          0       1       0       0
   730 ;;      Totals:         0       2       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    3
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_update_animation
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _animation_updown
   743  0094                     _animation_updown:	
   744                           
   745                           ;leds.c: 83: static uint8_t l = 0;
   746                           ;leds.c: 84: for(uint8_t i = 0; i != 4; ++i){
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _animation_updown: [wreg-fsr0h+status,2+status,0]
   750  0094  1283               	bcf	3,5	;RP0=0, select bank0
   751  0095  1303               	bcf	3,6	;RP1=0, select bank0
   752  0096  01B4               	clrf	animation_updown@i
   753  0097  3004               	movlw	4
   754  0098  0634               	xorwf	animation_updown@i,w
   755  0099  1903               	btfsc	3,2
   756  009A  28BC               	goto	l722
   757  009B                     l712:	
   758                           
   759                           ;leds.c: 85: if(i == l){
   760  009B  0834               	movf	animation_updown@i,w
   761  009C  0628               	xorwf	animation_updown@l,w
   762  009D  1D03               	skipz
   763  009E  28AB               	goto	l716
   764                           
   765                           ;leds.c: 86: leds[i] = 0xffff;
   766  009F  0834               	movf	animation_updown@i,w
   767  00A0  00B3               	movwf	??_animation_updown
   768  00A1  0733               	addwf	??_animation_updown,w
   769  00A2  3E20               	addlw	(low (_leds| 0))& (0+255)
   770  00A3  0084               	movwf	4
   771  00A4  30FF               	movlw	255
   772  00A5  1383               	bcf	3,7	;select IRP bank0
   773  00A6  0080               	movwf	0
   774  00A7  0A84               	incf	4,f
   775  00A8  30FF               	movlw	255
   776  00A9  0080               	movwf	0
   777                           
   778                           ;leds.c: 87: } else {
   779  00AA  28B4               	goto	l718
   780  00AB                     l716:	
   781                           
   782                           ;leds.c: 88: leds[i] = 0x0000;
   783  00AB  0834               	movf	animation_updown@i,w
   784  00AC  00B3               	movwf	??_animation_updown
   785  00AD  0733               	addwf	??_animation_updown,w
   786  00AE  3E20               	addlw	(low (_leds| 0))& (0+255)
   787  00AF  0084               	movwf	4
   788  00B0  1383               	bcf	3,7	;select IRP bank0
   789  00B1  0180               	clrf	0
   790  00B2  0A84               	incf	4,f
   791  00B3  0180               	clrf	0
   792  00B4                     l718:	
   793  00B4  3001               	movlw	1
   794  00B5  00B3               	movwf	??_animation_updown
   795  00B6  0833               	movf	??_animation_updown,w
   796  00B7  07B4               	addwf	animation_updown@i,f
   797  00B8  3004               	movlw	4
   798  00B9  0634               	xorwf	animation_updown@i,w
   799  00BA  1D03               	btfss	3,2
   800  00BB  289B               	goto	l712
   801  00BC                     l722:	
   802                           
   803                           ;leds.c: 89: }
   804                           ;leds.c: 90: }
   805                           ;leds.c: 91: if(++l == 4)
   806  00BC  3001               	movlw	1
   807  00BD  00B3               	movwf	??_animation_updown
   808  00BE  0833               	movf	??_animation_updown,w
   809  00BF  07A8               	addwf	animation_updown@l,f
   810  00C0  3004               	movlw	4
   811  00C1  0628               	xorwf	animation_updown@l,w
   812  00C2  1D03               	btfss	3,2
   813  00C3  0008               	return
   814                           
   815                           ;leds.c: 92: l = 0;
   816  00C4  01A8               	clrf	animation_updown@l
   817  00C5  0008               	return
   818  00C6                     __end_of_animation_updown:	
   819                           
   820                           	psect	text3
   821  0136                     __ptext3:	
   822 ;; *************** function _timer_init *****************
   823 ;; Defined at:
   824 ;;		line 31 in file "timer.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   838 ;;      Params:         0       0       0       0
   839 ;;      Locals:         0       0       0       0
   840 ;;      Temps:          0       0       0       0
   841 ;;      Totals:         0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    3
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _timer_init
   854  0136                     _timer_init:	
   855                           
   856                           ;timer.c: 32: T1CON = 0;
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _timer_init: [wreg+status,2]
   860  0136  1283               	bcf	3,5	;RP0=0, select bank0
   861  0137  1303               	bcf	3,6	;RP1=0, select bank0
   862  0138  0190               	clrf	16	;volatile
   863                           
   864                           ;timer.c: 33: INTCONbits.GIE = 1;
   865  0139  178B               	bsf	11,7	;volatile
   866                           
   867                           ;timer.c: 34: INTCONbits.PEIE = 1;
   868  013A  170B               	bsf	11,6	;volatile
   869                           
   870                           ;timer.c: 35: PIE1bits.TMR1IE = 1;
   871  013B  1683               	bsf	3,5	;RP0=1, select bank1
   872  013C  1303               	bcf	3,6	;RP1=0, select bank1
   873  013D  140C               	bsf	12,0	;volatile
   874                           
   875                           ;timer.c: 36: TMR1H = 0xF6;
   876  013E  30F6               	movlw	246
   877  013F  1283               	bcf	3,5	;RP0=0, select bank0
   878  0140  1303               	bcf	3,6	;RP1=0, select bank0
   879  0141  008F               	movwf	15	;volatile
   880                           
   881                           ;timer.c: 37: TMR1L = 0x3B;
   882  0142  303B               	movlw	59
   883  0143  008E               	movwf	14	;volatile
   884                           
   885                           ;timer.c: 38: T1CONbits.TMR1ON = 1;
   886  0144  1410               	bsf	16,0	;volatile
   887  0145  0008               	return
   888  0146                     __end_of_timer_init:	
   889                           
   890                           	psect	text4
   891  0123                     __ptext4:	
   892 ;; *************** function _leds_init *****************
   893 ;; Defined at:
   894 ;;		line 37 in file "leds.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   908 ;;      Params:         0       0       0       0
   909 ;;      Locals:         0       0       0       0
   910 ;;      Temps:          0       0       0       0
   911 ;;      Totals:         0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    3
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _leds_init
   924  0123                     _leds_init:	
   925                           
   926                           ;leds.c: 38: leds[0] = 0x5a5a;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _leds_init: [wreg]
   930  0123  305A               	movlw	90
   931  0124  1283               	bcf	3,5	;RP0=0, select bank0
   932  0125  1303               	bcf	3,6	;RP1=0, select bank0
   933  0126  00A0               	movwf	_leds
   934  0127  305A               	movlw	90
   935  0128  00A1               	movwf	_leds+1
   936                           
   937                           ;leds.c: 39: leds[1] = 0xa5a5;
   938  0129  30A5               	movlw	165
   939  012A  00A2               	movwf	_leds+2
   940  012B  30A5               	movlw	165
   941  012C  00A3               	movwf	_leds+3
   942                           
   943                           ;leds.c: 40: leds[2] = 0x5a5a;
   944  012D  305A               	movlw	90
   945  012E  00A4               	movwf	_leds+4
   946  012F  305A               	movlw	90
   947  0130  00A5               	movwf	_leds+5
   948                           
   949                           ;leds.c: 41: leds[3] = 0xa5a5;
   950  0131  30A5               	movlw	165
   951  0132  00A6               	movwf	_leds+6
   952  0133  30A5               	movlw	165
   953  0134  00A7               	movwf	_leds+7
   954  0135  0008               	return
   955  0136                     __end_of_leds_init:	
   956                           
   957                           	psect	text5
   958  00F5                     __ptext5:	
   959 ;; *************** function _gpio_init *****************
   960 ;; Defined at:
   961 ;;		line 30 in file "gpio.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   975 ;;      Params:         0       0       0       0
   976 ;;      Locals:         0       0       0       0
   977 ;;      Temps:          0       0       0       0
   978 ;;      Totals:         0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    3
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _gpio_init
   991  00F5                     _gpio_init:	
   992                           
   993                           ;gpio.c: 31: ANSEL = 0;
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _gpio_init: [status,2]
   997  00F5  1283               	bcf	3,5	;RP0=0, select bank2
   998  00F6  1703               	bsf	3,6	;RP1=1, select bank2
   999  00F7  019E               	clrf	30	;volatile
  1000                           
  1001                           ;gpio.c: 32: ANSELH = 0;
  1002  00F8  019F               	clrf	31	;volatile
  1003                           
  1004                           ;gpio.c: 34: TRISCbits.TRISC5 = 0;
  1005  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1006  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1007  00FB  1287               	bcf	7,5	;volatile
  1008                           
  1009                           ;gpio.c: 35: TRISCbits.TRISC7 = 0;
  1010  00FC  1387               	bcf	7,7	;volatile
  1011                           
  1012                           ;gpio.c: 36: TRISBbits.TRISB6 = 0;
  1013  00FD  1306               	bcf	6,6	;volatile
  1014                           
  1015                           ;gpio.c: 38: PORTCbits.RC5 = 0;
  1016  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0100  1287               	bcf	7,5	;volatile
  1019                           
  1020                           ;gpio.c: 39: PORTCbits.RC7 = 0;
  1021  0101  1387               	bcf	7,7	;volatile
  1022                           
  1023                           ;gpio.c: 40: PORTBbits.RB6 = 0;
  1024  0102  1306               	bcf	6,6	;volatile
  1025                           
  1026                           ;gpio.c: 42: TRISCbits.TRISC0 = 0;
  1027  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0105  1007               	bcf	7,0	;volatile
  1030                           
  1031                           ;gpio.c: 43: TRISCbits.TRISC1 = 0;
  1032  0106  1087               	bcf	7,1	;volatile
  1033                           
  1034                           ;gpio.c: 44: TRISCbits.TRISC2 = 0;
  1035  0107  1107               	bcf	7,2	;volatile
  1036                           
  1037                           ;gpio.c: 45: TRISCbits.TRISC3 = 0;
  1038  0108  1187               	bcf	7,3	;volatile
  1039                           
  1040                           ;gpio.c: 47: PORTCbits.RC0 = 0;
  1041  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1042  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1043  010B  1007               	bcf	7,0	;volatile
  1044                           
  1045                           ;gpio.c: 48: PORTCbits.RC1 = 0;
  1046  010C  1087               	bcf	7,1	;volatile
  1047                           
  1048                           ;gpio.c: 49: PORTCbits.RC2 = 0;
  1049  010D  1107               	bcf	7,2	;volatile
  1050                           
  1051                           ;gpio.c: 50: PORTCbits.RC3 = 0;
  1052  010E  1187               	bcf	7,3	;volatile
  1053  010F  0008               	return
  1054  0110                     __end_of_gpio_init:	
  1055                           
  1056                           	psect	text6
  1057  00C6                     __ptext6:	
  1058 ;; *************** function _isr *****************
  1059 ;; Defined at:
  1060 ;;		line 41 in file "timer.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1074 ;;      Params:         0       0       0       0
  1075 ;;      Locals:         0       0       0       0
  1076 ;;      Temps:          5       0       0       0
  1077 ;;      Totals:         5       0       0       0
  1078 ;;Total ram usage:        5 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		_set_lights
  1083 ;; This function is called by:
  1084 ;;		Interrupt level 1
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _isr
  1090  00C6                     _isr:	
  1091                           
  1092                           ;timer.c: 42: static uint8_t prescaler = 0;
  1093                           ;timer.c: 43: if(PIR1bits.TMR1IF){
  1094  00C6  1C0C               	btfss	12,0	;volatile
  1095  00C7  28EA               	goto	i1l63
  1096                           
  1097                           ;timer.c: 44: PIR1bits.TMR1IF = 0;
  1098  00C8  100C               	bcf	12,0	;volatile
  1099                           
  1100                           ;timer.c: 45: T1CONbits.TMR1ON = 0;
  1101  00C9  1010               	bcf	16,0	;volatile
  1102                           
  1103                           ;timer.c: 46: TMR1H = 0xF6;
  1104  00CA  30F6               	movlw	246
  1105  00CB  008F               	movwf	15	;volatile
  1106                           
  1107                           ;timer.c: 47: TMR1L = 0x3B;
  1108  00CC  303B               	movlw	59
  1109  00CD  008E               	movwf	14	;volatile
  1110                           
  1111                           ;timer.c: 48: T1CONbits.TMR1ON = 1;
  1112  00CE  1410               	bsf	16,0	;volatile
  1113                           
  1114                           ;timer.c: 50: set_lights(layer);
  1115  00CF  082B               	movf	_layer,w
  1116  00D0  118A  2025  118A   	fcall	_set_lights
  1117                           
  1118                           ;timer.c: 51: if(++layer == 4)
  1119  00D3  3001               	movlw	1
  1120  00D4  00F9               	movwf	??_isr
  1121  00D5  0879               	movf	??_isr,w
  1122  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1123  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1124  00D8  07AB               	addwf	_layer,f
  1125  00D9  3004               	movlw	4
  1126  00DA  062B               	xorwf	_layer,w
  1127  00DB  1903               	btfsc	3,2
  1128                           
  1129                           ;timer.c: 52: layer = 0;
  1130  00DC  01AB               	clrf	_layer
  1131                           
  1132                           ;timer.c: 54: if(++prescaler == 100){
  1133  00DD  3001               	movlw	1
  1134  00DE  00F9               	movwf	??_isr
  1135  00DF  0879               	movf	??_isr,w
  1136  00E0  07AA               	addwf	isr@prescaler,f
  1137  00E1  3064               	movlw	100
  1138  00E2  062A               	xorwf	isr@prescaler,w
  1139  00E3  1D03               	btfss	3,2
  1140  00E4  28EA               	goto	i1l63
  1141                           
  1142                           ;timer.c: 55: prescaler = 0;
  1143  00E5  01AA               	clrf	isr@prescaler
  1144                           
  1145                           ;timer.c: 56: animation_flag = 1;
  1146  00E6  3001               	movlw	1
  1147  00E7  00F9               	movwf	??_isr
  1148  00E8  0879               	movf	??_isr,w
  1149  00E9  00AC               	movwf	_animation_flag	;volatile
  1150  00EA                     i1l63:	
  1151  00EA  087D               	movf	??_isr+4,w
  1152  00EB  00FF               	movwf	127
  1153  00EC  087C               	movf	??_isr+3,w
  1154  00ED  008A               	movwf	10
  1155  00EE  087B               	movf	??_isr+2,w
  1156  00EF  0084               	movwf	4
  1157  00F0  0E7A               	swapf	(??_isr+1)^(0+-128),w
  1158  00F1  0083               	movwf	3
  1159  00F2  0EFE               	swapf	126,f
  1160  00F3  0E7E               	swapf	126,w
  1161  00F4  0009               	retfie
  1162  00F5                     __end_of_isr:	
  1163                           
  1164                           	psect	intentry
  1165  0004                     __pintentry:	
  1166                           ;incstack = 0
  1167                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1168                           
  1169  0004                     interrupt_function:	
  1170  007E                     saved_w	set	btemp
  1171  0004  00FE               	movwf	btemp
  1172  0005  0E03               	swapf	3,w
  1173  0006  00FA               	movwf	??_isr+1
  1174  0007  0804               	movf	4,w
  1175  0008  00FB               	movwf	??_isr+2
  1176  0009  080A               	movf	10,w
  1177  000A  00FC               	movwf	??_isr+3
  1178  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1179  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1180  000D  087F               	movf	btemp+1,w
  1181  000E  00FD               	movwf	??_isr+4
  1182  000F  118A  28C6         	ljmp	_isr
  1183                           
  1184                           	psect	text7
  1185  0025                     __ptext7:	
  1186 ;; *************** function _set_lights *****************
  1187 ;; Defined at:
  1188 ;;		line 45 in file "leds.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  gate            1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  gate            1    5[BANK0 ] unsigned char 
  1193 ;;  j               1    4[BANK0 ] unsigned char 
  1194 ;;  lights          2    2[BANK0 ] unsigned int 
  1195 ;;  a               2    0[BANK0 ] unsigned int 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1205 ;;      Params:         0       0       0       0
  1206 ;;      Locals:         0       6       0       0
  1207 ;;      Temps:          5       0       0       0
  1208 ;;      Totals:         5       6       0       0
  1209 ;;Total ram usage:       11 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    1
  1212 ;; This function calls:
  1213 ;;		_leds_get_layer
  1214 ;; This function is called by:
  1215 ;;		_isr
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _set_lights
  1221  0025                     _set_lights:	
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _set_lights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1225                           ;set_lights@gate stored from wreg
  1226  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0027  00B2               	movwf	set_lights@gate
  1229                           
  1230                           ;leds.c: 46: uint16_t lights = leds_get_layer(gate);
  1231  0028  0832               	movf	set_lights@gate,w
  1232  0029  118A  2146  118A   	fcall	_leds_get_layer
  1233  002C  0871               	movf	?_leds_get_layer+1,w
  1234  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1235  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1236  002F  00B0               	movwf	set_lights@lights+1
  1237  0030  0870               	movf	?_leds_get_layer,w
  1238  0031  00AF               	movwf	set_lights@lights
  1239                           
  1240                           ;leds.c: 47: PORTCbits.RC0 = 0;
  1241  0032  1007               	bcf	7,0	;volatile
  1242                           
  1243                           ;leds.c: 48: PORTCbits.RC1 = 0;
  1244  0033  1087               	bcf	7,1	;volatile
  1245                           
  1246                           ;leds.c: 49: PORTCbits.RC2 = 0;
  1247  0034  1107               	bcf	7,2	;volatile
  1248                           
  1249                           ;leds.c: 50: PORTCbits.RC3 = 0;
  1250  0035  1187               	bcf	7,3	;volatile
  1251                           
  1252                           ;leds.c: 51: uint16_t a = 1;
  1253  0036  3001               	movlw	1
  1254  0037  00AD               	movwf	set_lights@a
  1255  0038  3000               	movlw	0
  1256  0039  00AE               	movwf	set_lights@a+1
  1257                           
  1258                           ;leds.c: 52: for(uint8_t j = 0; j != 16; ++j){
  1259  003A  01B1               	clrf	set_lights@j
  1260  003B  3010               	movlw	16
  1261  003C  0631               	xorwf	set_lights@j,w
  1262  003D  1903               	btfsc	3,2
  1263  003E  2866               	goto	i1l84
  1264  003F                     i1l83:	
  1265                           
  1266                           ;leds.c: 53: PORTBbits.RB6 = 0;
  1267  003F  1306               	bcf	6,6	;volatile
  1268                           
  1269                           ;leds.c: 54: PORTCbits.RC7 = (0u != (lights & (1u << j)));
  1270  0040  0A31               	incf	set_lights@j,w
  1271  0041  00F4               	movwf	??_set_lights
  1272  0042  3001               	movlw	1
  1273  0043  00F5               	movwf	??_set_lights+1
  1274  0044  3000               	movlw	0
  1275  0045  00F6               	movwf	??_set_lights+2
  1276  0046  284A               	goto	u27_24
  1277  0047                     u27_25:	
  1278  0047  1003               	clrc
  1279  0048  0DF5               	rlf	??_set_lights+1,f
  1280  0049  0DF6               	rlf	??_set_lights+2,f
  1281  004A                     u27_24:	
  1282  004A  0BF4               	decfsz	??_set_lights,f
  1283  004B  2847               	goto	u27_25
  1284  004C  082F               	movf	set_lights@lights,w
  1285  004D  0575               	andwf	??_set_lights+1,w
  1286  004E  00F7               	movwf	??_set_lights+3
  1287  004F  0830               	movf	set_lights@lights+1,w
  1288  0050  0576               	andwf	??_set_lights+2,w
  1289  0051  00F8               	movwf	??_set_lights+4
  1290  0052  0877               	movf	??_set_lights+3,w
  1291  0053  0478               	iorwf	??_set_lights+4,w
  1292  0054  1903               	btfsc	3,2
  1293  0055  285A               	goto	u28_20
  1294  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0058  1787               	bsf	7,7	;volatile
  1297  0059  285D               	goto	i1l800
  1298  005A                     u28_20:	
  1299  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1300  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1301  005C  1387               	bcf	7,7	;volatile
  1302  005D                     i1l800:	
  1303                           
  1304                           ;leds.c: 55: PORTBbits.RB6 = 1;
  1305  005D  1706               	bsf	6,6	;volatile
  1306  005E  3001               	movlw	1
  1307  005F  00F4               	movwf	??_set_lights
  1308  0060  0874               	movf	??_set_lights,w
  1309  0061  07B1               	addwf	set_lights@j,f
  1310  0062  3010               	movlw	16
  1311  0063  0631               	xorwf	set_lights@j,w
  1312  0064  1D03               	btfss	3,2
  1313  0065  283F               	goto	i1l83
  1314  0066                     i1l84:	
  1315                           
  1316                           ;leds.c: 56: }
  1317                           ;leds.c: 57: PORTCbits.RC5 = 1;
  1318  0066  1687               	bsf	7,5	;volatile
  1319                           
  1320                           ;leds.c: 58: PORTBbits.RB6 = 0;
  1321  0067  1306               	bcf	6,6	;volatile
  1322                           
  1323                           ;leds.c: 59: PORTCbits.RC5 = 0;
  1324  0068  1287               	bcf	7,5	;volatile
  1325                           
  1326                           ;leds.c: 61: PORTCbits.RC0 = (0 == gate);
  1327  0069  0832               	movf	set_lights@gate,w
  1328  006A  1D03               	btfss	3,2
  1329  006B  2870               	goto	u31_20
  1330  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1331  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1332  006E  1407               	bsf	7,0	;volatile
  1333  006F  2873               	goto	u32_24
  1334  0070                     u31_20:	
  1335  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0072  1007               	bcf	7,0	;volatile
  1338  0073                     u32_24:	
  1339                           
  1340                           ;leds.c: 62: PORTCbits.RC1 = (1 == gate);
  1341  0073  0332               	decf	set_lights@gate,w
  1342  0074  1D03               	btfss	3,2
  1343  0075  287A               	goto	u33_20
  1344  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0078  1487               	bsf	7,1	;volatile
  1347  0079  287D               	goto	u34_24
  1348  007A                     u33_20:	
  1349  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1350  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1351  007C  1087               	bcf	7,1	;volatile
  1352  007D                     u34_24:	
  1353                           
  1354                           ;leds.c: 63: PORTCbits.RC2 = (2 == gate);
  1355  007D  3002               	movlw	2
  1356  007E  0632               	xorwf	set_lights@gate,w
  1357  007F  1D03               	btfss	3,2
  1358  0080  2885               	goto	u35_20
  1359  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0083  1507               	bsf	7,2	;volatile
  1362  0084  2888               	goto	u36_24
  1363  0085                     u35_20:	
  1364  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0087  1107               	bcf	7,2	;volatile
  1367  0088                     u36_24:	
  1368                           
  1369                           ;leds.c: 64: PORTCbits.RC3 = (3 == gate);
  1370  0088  3003               	movlw	3
  1371  0089  0632               	xorwf	set_lights@gate,w
  1372  008A  1D03               	btfss	3,2
  1373  008B  2890               	goto	u37_20
  1374  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1375  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1376  008E  1587               	bsf	7,3	;volatile
  1377  008F  0008               	return
  1378  0090                     u37_20:	
  1379  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0092  1187               	bcf	7,3	;volatile
  1382  0093  0008               	return
  1383  0094                     __end_of_set_lights:	
  1384                           
  1385                           	psect	text8
  1386  0146                     __ptext8:	
  1387 ;; *************** function _leds_get_layer *****************
  1388 ;; Defined at:
  1389 ;;		line 78 in file "leds.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  layer_nbr       1    wreg     unsigned char 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  layer_nbr       1    3[COMMON] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2    0[COMMON] unsigned int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1403 ;;      Params:         2       0       0       0
  1404 ;;      Locals:         1       0       0       0
  1405 ;;      Temps:          1       0       0       0
  1406 ;;      Totals:         4       0       0       0
  1407 ;;Total ram usage:        4 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_set_lights
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _leds_get_layer
  1418  0146                     _leds_get_layer:	
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _leds_get_layer: [wreg-fsr0h+status,2+status,0]
  1422                           ;leds_get_layer@layer_nbr stored from wreg
  1423  0146  00F3               	movwf	leds_get_layer@layer_nbr
  1424                           
  1425                           ;leds.c: 79: return leds[layer_nbr];
  1426  0147  0873               	movf	leds_get_layer@layer_nbr,w
  1427  0148  00F2               	movwf	??_leds_get_layer
  1428  0149  0772               	addwf	??_leds_get_layer,w
  1429  014A  3E20               	addlw	(low (_leds| 0))& (0+255)
  1430  014B  0084               	movwf	4
  1431  014C  1383               	bcf	3,7	;select IRP bank0
  1432  014D  0800               	movf	0,w
  1433  014E  00F0               	movwf	?_leds_get_layer
  1434  014F  0A84               	incf	4,f
  1435  0150  0800               	movf	0,w
  1436  0151  00F1               	movwf	?_leds_get_layer+1
  1437  0152  0008               	return
  1438  0153                     __end_of_leds_get_layer:	
  1439  007E                     btemp	set	126	;btemp
  1440  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      21
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_set_lights
    _set_lights->_leds_get_layer

Critical Paths under _main in BANK0

    _update_animation->_animation_updown

Critical Paths under _isr in BANK0

    _isr->_set_lights

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     112
                          _gpio_init
                          _leds_init
                         _timer_init
                   _update_animation
 ---------------------------------------------------------------------------------
 (1) _update_animation                                     0     0      0     112
                   _animation_updown
 ---------------------------------------------------------------------------------
 (2) _animation_updown                                     2     2      0     112
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leds_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     224
                                              9 COMMON     5     5      0
                         _set_lights
 ---------------------------------------------------------------------------------
 (4) _set_lights                                          11    11      0     224
                                              4 COMMON     5     5      0
                                              0 BANK0      6     6      0
                     _leds_get_layer
 ---------------------------------------------------------------------------------
 (5) _leds_get_layer                                       4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_init
   _leds_init
   _timer_init
   _update_animation
     _animation_updown

 _isr (ROOT)
   _set_lights
     _leds_get_layer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      8      15       3       26.3%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      23       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      23      10        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Apr 02 14:40:53 2017

              __CFG_CP$OFF 0000                         l91 015E    __size_of_leds_get_layer 000D  
                      l712 009B                        l722 00BC                        l810 0119  
                      l716 00AB                        l718 00B4                        l774 0154  
                      l778 0157               __CFG_CPD$OFF 0000                        _isr 00C6  
                      fsr0 0004                        indf 0000               __CFG_IESO$ON 0000  
                     ?_isr 0070                       i1l63 00EA                       i1l83 003F  
                     i1l84 0066           _update_animation 0153              __CFG_FCMEN$ON 0000  
                     _main 0110                       _leds 0020                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0011                      ??_isr 0079  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _ANSEL 011E  
                    _T1CON 0010                      i1l800 005D                      u31_20 0070  
                    u32_24 0073                      u33_20 007A                      _TMR1H 000F  
                    _TMR1L 000E                      u34_24 007D                      u35_20 0085  
                    u27_24 004A                      u27_25 0047                      u28_20 005A  
                    u36_24 0088                      u37_20 0090                      _layer 002B  
                    pclath 000A                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 0013               __end_of_main 0123  
 __end_of_animation_updown 00C6                     ??_main 0035                     _ANSELH 011F  
           __CFG_PWRTE$OFF 0000             _leds_get_layer 0146                     saved_w 007E  
  __end_of__initialization 0022     __end_of_leds_get_layer 0153             __pcstackCOMMON 0070  
 __end_of_update_animation 015F                 __pbssBANK0 0020         __size_of_leds_init 0013  
       __size_of_gpio_init 001B                 __pmaintext 0110            ?_leds_get_layer 0070  
               __pintentry 0004               isr@prescaler 002A          __end_of_leds_init 0136  
        ?_animation_updown 0070                    __ptext1 0153                    __ptext2 0094  
                  __ptext3 0136                    __ptext4 0123                    __ptext5 00F5  
                  __ptext6 00C6                    __ptext7 0025                    __ptext8 0146  
        __end_of_gpio_init 0110                  _T1CONbits 0010         ??_animation_updown 0033  
             __size_of_isr 002F                set_lights@a 002D                set_lights@j 0031  
     end_of_initialization 0022                 _set_lights 0025             _animation_flag 002C  
               _timer_init 0136                  _PORTBbits 0006                  _PORTCbits 0007  
           set_lights@gate 0032                  _TRISBbits 0086                  _TRISCbits 0087  
  leds_get_layer@layer_nbr 0073          ?_update_animation 0070         ??_update_animation 0035  
      start_initialization 0013                __end_of_isr 00F5           ??_leds_get_layer 0072  
              ?_set_lights 0070                ?_timer_init 0070                  ___latbits 0001  
            __pcstackBANK0 002D                  _leds_init 0123                  _gpio_init 00F5  
      __size_of_set_lights 006F  __size_of_animation_updown 0032          interrupt_function 0004  
      __size_of_timer_init 0010                   _PIE1bits 008C                   _PIR1bits 000C  
               ?_leds_init 0070                 ?_gpio_init 0070  __size_of_update_animation 000C  
            __size_of_main 0013               ??_set_lights 0074               ??_timer_init 0033  
              ??_leds_init 0033                 _INTCONbits 000B                ??_gpio_init 0033  
       __end_of_set_lights 0094                   intlevel1 0000           _animation_updown 0094  
       __end_of_timer_init 0146            _animation_state 0029          animation_updown@i 0034  
        animation_updown@l 0028           set_lights@lights 002F          __CFG_FOSC$INTRCIO 0000  
